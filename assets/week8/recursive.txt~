main calls: fibonacci(4)

Stack diagram:
    $sp -------->   | $ra |   <-- backup $ra      }   main scope
                    | $t0 |   <-- backup $t0      }   main scope
                    | $t1 |   <-- backup $t1      }   main scope
               4 => | $t0 |   <-- argument IN     }   main scope
                    |  ?  |   <-- argument OUT    }   main scope         >>-----------|
                    | $ra |   <-- backup $ra      }   fibonacci(4) scope <<-----------|
               4 => | $t0 |   <-- backup $t0      }   fibonacci(4) scope
              10 => | $t1 |   <-- backup $t1      }   fibonacci(4) scope  >>----
         4-1 = 3 => | $t0 |   <-- arguemnt IN     }   fibonacci(4) scope       |
     (1 + 2) + 2 => |  ?  |   <-- argument OUT    }   fibonacci(4) scope       |
                    | $ra |   <-- backup $ra      }   fibonacci(3) scope       |
               3 => | $t0 |   <-- backup $t0      }   fibonacci(3) scope       |
              10 => | $t1 |   <-- backup $t1      }   fibonacci(3) scope  <<---|
         3-1 = 2 => | $t0 |   <-- arguemnt IN     }   fibonacci(3) scope       |
fibonacci(2) = 2 => |  ?  |   <-- argument OUT    }   fibonacci(3) scope       |
                    | $ra |   <-- backup $ra      }   fibonacci(3) scope       |
               3 => | $t0 |   <-- backup $t0      }   fibonacci(3) scope       |
              10 => | $t1 |   <-- backup $t1      }   fibonacci(3) scope       |
         3-2 = 1 => | $t0 |   <-- arguemnt IN     }   fibonacci(3) scope       |
fibonacci(1) = 1 => |  ?  |   <-- argument OUT    }   fibonacci(3) scope       |
                    | $ra |   <-- backup $ra      }   fibonacci(2) scope       |
               4 => | $t0 |   <-- backup $t0      }   fibonacci(2) scope       |
              10 => | $t1 |   <-- backup $t1      }   fibonacci(2) scope  <<---|
         4-2 = 2 => | $t0 |   <-- arguemnt IN     }   fibonacci(2) scope       |
fibonacci(2) = 2 => |  ?  |   <-- argument OUT    }   fibonacci(2) scope       |

                     stack                                                                                                                   

Algorithm:
    fibonacci(int value) {
           if(term <= 2) {
               return term;
           }

           return fibonacci(value - 1) + fibonacci(value - 2);
       }
       
Note:
    * scope is object oriented term, stack frame might be a better synonym
       
